{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["Editor","props","displayName","language","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","useLocalStorage","key","intialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setDoc","timeout","setTimeout","clearTimeout","class","title","sandbox","frameBorder","height","width","ReactDOM","render","document","getElementById"],"mappings":"4RAUe,SAASA,EAAOC,GAAQ,IAC5BC,EAAuCD,EAAvCC,YAAYC,EAA2BF,EAA3BE,SAASC,EAAkBH,EAAlBG,MAAMC,EAAYJ,EAAZI,SADA,MAOXC,oBAAS,GAPE,mBAO3BC,EAP2B,KAOtBC,EAPsB,KASlC,OACI,yBAAKC,UAAS,iBAAYF,EAAO,GAAI,cACjC,yBAAKE,UAAU,gBACVP,EACD,4BACAQ,KAAK,SACLD,UAAU,iBACVE,QAAS,kBAAKH,GAAQ,SAAAI,GAAQ,OAAKA,OAE/B,kBAAC,IAAD,CACAC,KAAMN,EAAOO,IAAgBC,QAIrC,kBAAC,aAAD,CACAC,eArBR,SAAsBC,EAAOC,EAAKd,GAC9BC,EAASD,IAqBLA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACLC,cAAa,EACbC,MAAK,EACLC,KAAKnB,EACLoB,aAAY,EACZC,MAAM,eCtCP,SAASC,EAAgBC,EAAIC,GAC5C,IAAMC,EAHM,iBAGcF,EAD+B,EAGhCpB,oBAAS,WAC9B,IAAMuB,EAAYC,aAAaC,QAAQH,GAEvC,OAAgB,MAAbC,EAEQG,KAAKC,MAAMJ,GAGK,oBAAjBF,EAECA,IAGAA,KAhB0C,mBAGlDvB,EAHkD,KAG5C8B,EAH4C,KAwBxD,OAJAC,qBAAU,WACPL,aAAaM,QAAQR,EAAYI,KAAKK,UAAUjC,MAChD,CAACwB,EAAYxB,IAET,CAACA,EAAM8B,GCoCAI,MA3Df,WAAgB,IAAD,EAEQb,EAAgB,OAAO,IAF/B,mBAERc,EAFQ,KAEHC,EAFG,OAGMf,EAAgB,MAAM,IAH5B,mBAGRgB,EAHQ,KAGJC,EAHI,OAIIjB,EAAgB,KAAK,IAJzB,mBAIRkB,EAJQ,KAILC,EAJK,OAKStC,mBAAS,IALlB,mBAKRuC,EALQ,KAKDC,EALC,KAuBb,OAhBFX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACjBF,EAAO,2CAAD,OAEEP,EAFF,uCAGGE,EAHH,yCAIIE,EAJJ,oDAOd,KACF,OAAO,kBAAKM,aAAaF,MACzB,CAACR,EAAKE,EAAIE,IAMR,yBAAKO,MAAM,kBACb,yBAAKzC,UAAU,iBACX,kBAACT,EAAD,CACCE,YAAY,OACZC,SAAS,MACTC,MAAOmC,EACPlC,SAAUmC,IAER,kBAACxC,EAAD,CACFE,YAAY,MACZC,SAAS,MACTC,MAAOqC,EACPpC,SAAUqC,IAEL,kBAAC1C,EAAD,CACLE,YAAY,KACZC,SAAS,aACTC,MAAOuC,EACPtC,SAAUuC,KAGf,yBAAKnC,UAAU,UACb,4BACAoC,OAAQA,EACRM,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,OAAO,OACPC,MAAM,YCrDVC,IAASC,OACL,kBAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4da80b7b.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport \"codemirror/mode/xml/xml\"\r\nimport \"codemirror/mode/css/css\"\r\nimport \"codemirror/mode/javascript/javascript\"\r\nimport {Controlled as ControlledEditor} from 'react-codemirror2'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faCompressAlt,faExpandAlt} from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Editor(props) {\r\n    const {displayName,language,value,onChange} = props;\r\n\r\n    function handleChange(editor,data,value){\r\n        onChange(value)\r\n    }\r\n\r\n    const [open,setOpen] = useState(true)\r\n\r\n    return (\r\n        <div className={`editor ${open ? '': \"collapsed\"}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button\r\n                type=\"button\"\r\n                className=\"open-close-btn\"\r\n                onClick={()=> setOpen(prevOpen => !prevOpen)}\r\n                >\r\n                    <FontAwesomeIcon \r\n                    icon={open ? faCompressAlt : faExpandAlt}\r\n                    />\r\n                </button>\r\n            </div>\r\n            <ControlledEditor\r\n            onBeforeChange={handleChange}\r\n            value={value}\r\n            className=\"code-mirror-wrapper\"\r\n            options={{\r\n                lineWrapping:true,\r\n                lint:true,\r\n                mode:language,\r\n                lineNumbers:true,\r\n                theme:'material'\r\n              } }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react'\r\n\r\nconst PRE = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key,intialValue) {\r\nconst prefixedKey = PRE + key;\r\n\r\nconst [value,setValue] = useState(()=>{\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n\r\n    if(jsonValue != null)\r\n    {\r\n        return JSON.parse(jsonValue)\r\n    }\r\n\r\n    if(typeof(intialValue) === 'function')\r\n    {\r\n        return intialValue()\r\n    }\r\n    else{\r\n        return intialValue\r\n    }\r\n})\r\n\r\n useEffect(() => {\r\n    localStorage.setItem(prefixedKey,JSON.stringify(value))\r\n }, [prefixedKey,value])\r\n\r\n return [value,setValue]\r\n}\r\n","import React,{useState,useEffect} from 'react';\nimport './index.css'\nimport Editor from './components/Editor'\nimport useLocalStorage from './hooks/useLocalStorage'\n\nfunction App() {\n\nconst [html,setHtml] = useLocalStorage('html','')\nconst [css,setCss] = useLocalStorage('css','')\nconst [js,setJs] = useLocalStorage('js','')\nconst [srcDoc,setDoc] = useState('')\n\nuseEffect(()=>{\n  const timeout = setTimeout(()=>{\n            setDoc(`\n            <html>\n            <body>${html}</body>\n            <style>${css}</style>\n            <script>${js}</script>\n            </html>\n            `)\n  },250)\n  return ()=> clearTimeout(timeout)\n},[html,css,js]);\n\n\n\n\n  return (\n    <div class=\"main-container\" >\n  <div className=\"lane top-lane\">\n      <Editor\n       displayName=\"HTML\"\n       language=\"xml\"\n       value={html}\n       onChange={setHtml}\n        />\n         <Editor\n       displayName=\"CSS\"\n       language=\"css\"\n       value={css}\n       onChange={setCss}\n        />\n            <Editor\n       displayName=\"JS\"\n       language=\"javascript\"\n       value={js}\n       onChange={setJs}\n        />\n  </div>\n  <div className=\"bottom\" >\n    <iframe\n    srcDoc={srcDoc}\n    title=\"output\"\n    sandbox=\"allow-scripts\"\n    frameBorder=\"0\"\n    height=\"100%\"\n    width=\"100%\"\n   />\n  </div>\n  </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}